//Method 1

class Solution {
    public static int posOfRightMostSetBit(int num) {
        if (num == 0) {
            return -1;
        }

        int position = 0;

        for (int i = 0; i < 32; i++) {
            int mask = 1 << i;
            if ((num & mask) != 0) {
                position++; // counting the position of the First set bit
                break;
            } else {
                position++;
            }
        }

        return position;
    }
}

// Method2

class Solution {
    public static int posOfRightMostSetBit(int num) {
        if (num == 0) {
            return -1;
        }

        int position = 0;

        while (num != 0) {
            if ((num & 1) != 0) {
                position++;// counting the position of first set bit
                break;
            } else {
                position++;
                num = num >> 1;
            }
        }

        return position;
    }
}
