class Solution {
    static int findPosition(int num) {
        if (!isPowerOfTwo(num)) {
            return -1;
        }

        return posOfRightMostSetBit(num);
    }

    private static boolean isPowerOfTwo(int num) {
        if (num <= 0) {
            return false;
        }

        if ((num & (num - 1)) == 0) {
            return true;
        }

        return false;
    }

    private static int posOfRightMostSetBit(int num) {
        int position = 0;

        for (int i = 0; i < 32; i++) {
            int mask = 1 << i;
            if ((num & mask) != 0) {
                position++;// counting the position of the Only set bit
                break;
            } else {
                position++;
            }
        }
        return position;
    }
}
